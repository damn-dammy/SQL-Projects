{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RNVg-c0uThjK","executionInfo":{"status":"ok","timestamp":1743174667307,"user_tz":-300,"elapsed":24034,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"df8dc056-cba9-4cb5-acbc-3b75c9786fb3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ArGFIa9lv10d"},"outputs":[],"source":["# importing libraries for data manipulation\n","import pandas as pd\n","import numpy as np\n","# importing libraries for data visualization\n","import seaborn as sns\n","import matplotlib.pyplot as plt"]},{"cell_type":"markdown","source":["#Loading Dataset\n"],"metadata":{"id":"YyBV3n3TxdSK"}},{"cell_type":"code","source":["Result1 = pd.read_csv('')\n","Result4 = pd.read_csv('')\n","Result7 = pd.read_csv('')"],"metadata":{"id":"Eq1LHHM53-Sd","colab":{"base_uri":"https://localhost:8080/","height":339},"executionInfo":{"status":"error","timestamp":1743174677083,"user_tz":-300,"elapsed":180,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"cecf5be9-5def-48b1-de33-c062687a52a7"},"execution_count":null,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: ''","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-be51b8266631>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mResult1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mResult4\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mResult7\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m   1024\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1025\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1026\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1027\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1028\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    619\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 620\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    622\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1619\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1620\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1622\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1878\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1879\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1880\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1881\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1882\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    871\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    872\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 873\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    874\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    875\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: ''"]}]},{"cell_type":"markdown","source":["#Data Overview#\n","\n"],"metadata":{"id":"PdX5yIFvynPj"}},{"cell_type":"markdown","source":["## Result 1 Dataframe Assessing and cleaning"],"metadata":{"id":"AetupkhKXYWG"}},{"cell_type":"markdown","source":["**Feature information in Result1**\n","- Company Name is basically taxi company\n","- Number of rides for the taxi company in November"],"metadata":{"id":"RfhIloZ7zAdQ"}},{"cell_type":"code","source":["Result1.head()\n"],"metadata":{"id":"4c9eIbDJXSL4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result1.info()"],"metadata":{"id":"NbBbsk-LYGmu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result1.describe()"],"metadata":{"id":"MRoY0ExDYOl8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result1.shape"],"metadata":{"id":"I4M8r6DNYRr0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result1.duplicated().sum()"],"metadata":{"id":"X39T48xQYgs3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result1['company_name'].nunique()"],"metadata":{"id":"JlC4wVa5YmFG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Result 4 Dataframe"],"metadata":{"id":"V0j2VP1wZiqz"}},{"cell_type":"markdown","source":["**Feature information in Result4**\n","\n","- dropoff_location_name is the chicago neighbourhood where the ride ended.\n","- average_trips is the avg no of rides that ended in each neighbourhood"],"metadata":{"id":"fZe21w7V2XZV"}},{"cell_type":"code","source":["Result4.head()"],"metadata":{"id":"mIS-1aHOXIaI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result4.shape"],"metadata":{"id":"JR9-ruzJZ7xa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result4['dropoff_location_name'].nunique()"],"metadata":{"id":"zYboK1rfaChB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result4.info()"],"metadata":{"id":"KsXbB2RlaM6N"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["We notice here that the data type of avg trips is in float form, we can covert ir to INT64."],"metadata":{"id":"tqehVQd7aUbL"}},{"cell_type":"code","source":["Result4['average_trips'] = Result4['average_trips'].astype('int64')"],"metadata":{"id":"Wgd4OSdMadMq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result4.info()"],"metadata":{"id":"4siC8TSKaigd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result4.duplicated().sum()"],"metadata":{"id":"fPDJeM_yanDV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result4.describe()"],"metadata":{"id":"PtukG4_IarxD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Result 7 Dataframe"],"metadata":{"id":"L58PvEo9a7DE"}},{"cell_type":"code","source":["Result7.head()"],"metadata":{"id":"j27PpB63a_5E"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result7['weather_conditions'].value_counts()"],"metadata":{"id":"YQyvkxvPbJED"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result7.shape"],"metadata":{"id":"GEphH3BDbvR2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result7.info()"],"metadata":{"id":"ltNauW3rbjYo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Changing the \"duration\" type from float64 to Int 64"],"metadata":{"id":"JattKPECbxa6"}},{"cell_type":"code","source":["Result7['duration_seconds'] = Result7['duration_seconds'].astype('int64')"],"metadata":{"id":"dCUNeH5Xb70b"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result7.info()"],"metadata":{"id":"h-dz3dVJcJrn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["we're converting the \"start_ts\" to Day time format from object"],"metadata":{"id":"QUSQPyeNko_n"}},{"cell_type":"code","source":["Result7['start_ts'] = pd.to_datetime(Result7['start_ts'])\n","Result7.info()"],"metadata":{"id":"sdPVw11vkoRR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Now we'll convert the duration_seconds from seconds to minutes"],"metadata":{"id":"KBPf1UIPcMY3"}},{"cell_type":"code","source":["Result7['duration_minutes'] = Result7['duration_seconds']/60\n","Result7['duration_minutes']= Result7['duration_minutes'].round(2)\n","Result7.head()\n"],"metadata":{"id":"tXKQuY6jcRIC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result7.describe()"],"metadata":{"id":"BW74powUdKBj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Canceled_Rides=Result7[Result7['duration_minutes']==0.00]\n","Canceled_Rides\n"],"metadata":{"id":"A8gzBd7MdY9i"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["\n","\n","---\n","\n","\n","\n","---\n","\n"],"metadata":{"id":"JtPlv83Q7mmU"}},{"cell_type":"markdown","source":["##Data Anaysis\n","\n","\n"],"metadata":{"id":"U9kONwyx7vyt"}},{"cell_type":"markdown","source":["## 1. identify the top 10 neighborhoods in terms of drop-offs"],"metadata":{"id":"QmOloiIN8Jtm"}},{"cell_type":"code","source":["Top_10_neighborhoods=Result4.head(10)\n","Top_10_neighborhoods"],"metadata":{"id":"_1uaYaVueNZS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(12,7))\n","plt.bar(Top_10_neighborhoods['dropoff_location_name'],Top_10_neighborhoods['average_trips'],color='red')\n","plt.title('Top 10 neighborhoods in terms of drop-offs')\n","plt.xlabel('Neighborhoods')\n","plt.ylabel('Average Trips')\n","plt.xticks(rotation=45,ha='right')\n","plt.style.use('fivethirtyeight')\n","plt.tight_layout()\n","plt.show()"],"metadata":{"id":"uQxghBb2f-sp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 2. Top 10 Taxi Companies by number of rides"],"metadata":{"id":"qF1URQBP_YyN"}},{"cell_type":"code","source":["Top_10_taxi_companies=Result1.head(10)\n","Top_10_taxi_companies"],"metadata":{"id":"fVXSNoUMeDw7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(18,10))\n","plt.bar(Top_10_taxi_companies['company_name'],Top_10_taxi_companies['trips_amount'],color='red')\n","plt.title('Top 10 taxi companies ranked by rides')\n","plt.xlabel('Taxi company name')\n","plt.ylabel('Number of rides')\n","plt.xticks(rotation=45,ha='right')\n","plt.style.use('fivethirtyeight')\n","plt.tight_layout()\n","plt.show()"],"metadata":{"id":"batayytWhdax"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["\n","\n","---\n","\n","\n","\n","---\n","\n"],"metadata":{"id":"vq87vzSOC98H"}},{"cell_type":"markdown","source":["#Testing hypotheses\n","\n","\n","## Does the average duration of rides from the Loop to O'Hare International Airport changes on rainy Saturdays."],"metadata":{"id":"c4wC4-sYDVVi"}},{"cell_type":"markdown","source":["**Null Hypothesis (H0):**\n","\n","The average duration of rides from the Loop to O'Hare International Airport on rainy Saturdays is the same as the average duration on non-rainy Saturdays.\n","\n","**Alternative Hypothesis (H1):**\n","\n","The average duration of rides from the Loop to O'Hare International Airport on rainy Saturdays is different from the average duration on non-rainy Saturdays.\n","\n","**Criteria for Testing the Hypotheses:**\n","\n","**Data Selection:**\n"," Separate the data into two groups based on weather conditions (rainy and non-rainy Saturdays).\n","\n","**Significance Level (Alpha):** Typically, a significance level of 0.05 (5%) is commonly used.\n","\n","**Statistical Test:**\n","Use a two-sample t-test to compare the means of the two groups (rainy vs. non-rainy Saturdays). The t-test helps to determine if the means of two groups are significantly different."],"metadata":{"id":"UeXY-02dKwfb"}},{"cell_type":"code","source":["Result7"],"metadata":{"id":"m4iscW17n1PV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result7[\"day_of_week\"] = Result7[\"start_ts\"].dt.day_name()\n","Result7"],"metadata":{"id":"IMJjQ-aokWxi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result7['day_of_week'].nunique()"],"metadata":{"id":"Mi4V9JF3oCe_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# separating data into rainy and non-rainy saturdays\n","non_rainy_saturdays = Result7[(Result7[\"weather_conditions\"] == \"Good\")]\n","rainy_saturdays = Result7[(Result7[\"weather_conditions\"] == \"Bad\")]"],"metadata":{"id":"kURMGvfcmkrY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Result7[\"weather_conditions\"].value_counts()"],"metadata":{"id":"uYtWoYRNodDQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import scipy.stats as stats\n","t_statistic, p_value = stats.ttest_ind(rainy_saturdays[\"duration_minutes\"], non_rainy_saturdays[\"duration_minutes\"])\n","\n","alpha = 0.05\n","\n","print(\"t-statistic:\", t_statistic)\n","print(\"p-value:\", p_value)\n","\n","\n","if p_value < alpha:\n","    print(\"Reject the null hypothesis: The average duration of rides from the Loop to O'Hare International Airport on rainy Saturdays is different from the average duration on non-rainy Saturdays.\")\n","else:\n","    print(\"Fail to reject the null hypothesis: There is no significant difference in the average duration of rides from the Loop to O'Hare International Airport on rainy Saturdays.\")"],"metadata":{"id":"B3Lzg13RnNnd"},"execution_count":null,"outputs":[]}]}